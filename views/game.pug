html
    head
        link(href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.3.0/css/font-awesome.css" rel="stylesheet"  type='text/css')
        style
            include looks.css
        script(src='https://code.jquery.com/jquery-latest.min.js')
        script(src='https://cdn.rawgit.com/nnattawat/flip/master/dist/jquery.flip.min.js')
        script(type='text/javascript').
                function allowDrop(ev) {
                    ev.preventDefault();
                }

                function drag(ev) {
                    ev.dataTransfer.setData("text", ev.target.id);
                }

                function drop(ev) {
                    ev.preventDefault();
                    var data = ev.dataTransfer.getData("text");
                    ev.target.appendChild(document.getElementById(data));
                }



                //Modal Popup Instructions Functions
                $(function(){ 
                    $('.inst_button ').on('click',function(){
                        $('.inst').css({
                            'transform':'translateY(0)','z-index':'999'
                        });
    
                     $('body').addClass('overlay');

    
                     $(this).css({
                        'z-index':'-1'
                     });
    
                    $('.inst > .close').on('click',function(){
                        $(this).parent().css({
                            'transform':'translateY(-300%)'
                        });
     
                        $('body').removeClass('overlay');
                            $(this).parent().siblings('.btn').css({
                                'z-index':'1'
                            });
                    });
                    });
                });

                //Modal Leaderboard button: 
                $(function(){ 
                    $('.lead_button').on('click',function(){
                        $('.lead').css({
                            'transform':'translateY(-125%)','z-index':'800'
                        });
    
                     $('body').addClass('overlay');

    
                     $(this).css({
                        'z-index':'-1'
                     });
    
                    $('.lead > .close').on('click',function(){
                        $(this).parent().css({
                            'transform':'translateY(-400%)'
                        });
     
                        $('body').removeClass('overlay');
                            $(this).parent().siblings('.btn').css({
                                'z-index':'1'
                            });
                    });
                    });
                });
                
                //End draft

                $(document).ready(function() {

                    //- hard code user, use notes, YOU CAN START HERE
                    var deck;
                    var nextToDraw = 16; //index of next card to draw

                    let c = $(".card"); //flipping the images
                    c.flip({axis:'y', trigger:'click'});

                    let c1 = $(".card1");
                      c.flip({axis:'y', trigger:'click'});
                    //test 2nd column 
                
                    var getOriginalPosition = function() {
                        $('#div1 img').each( function() {
                            //original position = row#column#
                            var op = $(this).parent().closest('th').attr('id');
                            $(this).attr('data-op', op);
                        });
                    }

                    var shuffle = function(deck) {
                        for (var i=0; i<deck.length; i++) {
                            var shuffle_pos = Math.floor((deck.length - i) * Math.random()) + i;
                            var tmp = deck[i];
                            deck[i] = deck[shuffle_pos];
                            deck[shuffle_pos] = tmp;
                        }
                    }

                    var drawCards = function(numToDraw) {
                        //if no more cards left in deck
                        if (nextToDraw + numToDraw > deck.length) {
                            return;
                        }
                        var drawnCards = [];
                        for (var i=0; i<numToDraw; i++) {
                            drawnCards.push(deck[nextToDraw]);
                            nextToDraw++;
                        }
                        return drawnCards;
                    }

                    var makeCard = function(card) {
                        return $("<img id=" + card['_id'] + " data-rid=" + card['rid'] + 
                                " data-type=" + card['type'] + " src=" + card['front'] + 
                                " alt=" + card['back'] + " draggable='true' ondragstart='drag(event)'>");
                    }

                    //should use this function, but cards css is not applied
                    var makeCard2 = function(card) {
                        return $("<div class='card'>" + 
                                    "<div class='front'>" + 
                                        "<img id=" + card['_id'] + " data-rid=" + card['rid'] + 
                                        " data-type=" + card['type'] + " src=" + card['front'] + 
                                        " alt=" + card['back'] + " draggable='true' ondragstart='drag(event)'>" + 
                                    "</div>" +
                                    "<div class='back'>" + 
                                        "<p>" + card['back'] + "</p>" + 
                                    "</div>" + 
                                "</div>");
                    }
                    $('#start_game').click(function(e) {
                        e.preventDefault();

                        $('#div1').show();
                        $('#div2').show();
                        $('#submit').show();
                        $('#start_game').hide();

                        $.ajax({
                            url: '/generateCards',
                            data: {request: "req"},
                            method: 'POST',
                            error: function(response) {
                                console.log("error in ajax call")
                                console.log(response)
                            }
                        }).then( function(response) {
                            //response will be json object of all cards from db
                            deck = JSON.parse(response);
                            shuffle(deck);
                            //var deck = JSON.parse(response);

                            var row_num = 1;
                            var col_num = 1;
                            for (var i = 0;i < 16;i++) {
                                //table_pos = r#c#
                                var table_pos = 'r' + row_num + 'c' + col_num;
                                //$('#div1 th#' + table_pos).append(makeCard2(deck[i]));
                                $('#div1 th#' + table_pos + ' .card .front').append(makeCard(deck[i]));
                                $('#div1 th#' + table_pos + ' .card .back').append($("<p>" + deck[i]['back'] + "</p>"));
                                col_num++;
                                if (col_num == 5) {
                                    col_num = 1;
                                    row_num++;
                                }
                            }
                            getOriginalPosition();
                        });
                    });
                    
                    var score = 0;
                    $('#check').on("click", function(e) {
                        e.preventDefault();

                        //remove previous answer check
                        $('#result').empty();
                        $('#score').empty();

                        var reactant = $('#reactant').children('img');
                        var reagent = $('#reagent').children('img');
                        var product = $('#product').children('img');

                        //check answer
                        // if correct
                        if (reactant.attr('data-type') == 'reactant' &&
                            reagent.attr('data-type') == 'reagent' &&
                            product.attr('data-type') == 'product' &&
                            reactant.attr('data-rid') == reagent.attr('data-rid') &&
                            reagent.attr('data-rid') == product.attr('data-rid')) {
                            score++;
                            $('#score').append("<p>Score: "+score+"</p>")
                            $('#result').append("<p>Correct</p>")
                            //draw new cards to replace
                            var newCards = drawCards(3);
                            console.log(newCards);
                            var j = 0;
                            //append new cards to grid and clear old cards
                            setTimeout(function() {
                                $('#div2 img').each( function() {
                                    //$('#' + $(this).attr('data-op')).append(makeCard2(newCards[j]));
                                    $('#' + $(this).attr('data-op') + ' .card .front').append(makeCard(newCards[j]));
                                    $('#' + $(this).attr('data-op') + ' .card .back').append($("<p>" + newCards[j]['back'] + "</p>"))
                                    j++;
                                });
                                $('#div2 .sub_box').empty();
                                $('#result').empty()}, 1500);
                        } else {
                            score--;
                            $('#score').append("<p>Score: "+score+"</p>");
                            $('#result').append("<p>Incorrect</p>");
                            $('#clear_answers').show();
                        }
                    });

                    $('#clear_answers').on("click", function(e) {
                        //returns cards to previous positions (row#column#)
                        $('#div2 img').each( function() {
                            $('#' + $(this).attr('data-op') + ' .front').append($(this));
                        });
                        $('#result').empty();
                        $(this).hide();
                    });
                    
                });

    <body>
        <div class="content">
        <div id='header'>
            <img src="http://i68.tinypic.com/9bhxqg.png" alt="LOGO" width="25%" align="middle">
        </div>
        <div id='buttons'>
            <button class="inst_button" > Instructions </button>
            <button class="lead_button" > Leaderboard </button>
            //- <button class="toggle"> Mode Toggle </button>
            //- Instructions Code 
            <div class="inst">
                //- <h1> Instructions Here </h1>
                <div class="close"> X </div>
                <div class="instructions">
                    <h1> Instructions</h1>
                    <p>Welcome to Chemistry Against Humanity, a fun way to practice and learn Organic Chemistry reactions! 
                    <br><br>Objective: Clear the cards by creating reactions from the 4x4 grid. Your score reflects the number of reactions you correctly match!
                    <br><br>How to Play:
                    <ul>
                        <li>Drag the cards down to their respective boxes. Be careful! Order of the cards matters! </li>
                        <li>Press submit when you think your reaction is correct. If it is right, your score will increase by __. If wrong, your score will decrease by __ and you can clear the cards by pressing "Clear"</li>
                        <li>New cards will populate the board after a correct reaction</li>
                        <li>Continue to make reactions until the board is empty!</li>
                    </ul>
                    </p>
                </div>
            </div>
            //- Leaderboard Code
            <div class="lead">
                <div class="close"> X </div>
                    <table class = leaderB>
                <tr>
                    <th>Spot<th>
                    <th>Name<th>
                    <th>Points<th>
                </tr>
                <tr>
                    <th>1<th>
                    <th>Player <th>
                    <th>13<th>
                </tr>
                <tr>
                    <th>2<th>
                    <th>Jeffrey Young<th>
                    <th>8<th>
                </tr>
                <tr>
                    <th>3<th>
                    <th>Qian Wang<th>
                    <th>7<th>
                </tr>
                <tr>
                    <th>4<th>
                    <th>Sarah Renfo<th>
                    <th>6<th>
                </tr>
                <tr>
                    <th>5<th>
                    <th>Steveen Vargas<th>
                    <th>5<th>
                </tr>
                </table>
            </div>
        </div>

        <button id='start_game'>Start Game</button>

        <table id='div1' style='display:none;' ondrop='drop(event)' ondragover='allowDrop(event)'>
            <tr>
                <th id='r1c1'>
                    <div class='card'><div class='front'></div><div class='back'></div></div>
                </th>
                <th id='r1c2'>
                    <div class='card'><div class='front'></div><div class='back'></div></div>
                </th>
                <th id='r1c3'>
                    <div class='card'><div class='front'></div><div class='back'></div></div>
                </th>
                <th id='r1c4'>
                    <div class='card'><div class='front'></div><div class='back'></div></div>
                </th>
            </tr>
            <tr>
                <th id='r2c1'>
                    <div class='card'><div class='front'></div><div class='back'></div></div>
                </th>
                <th id='r2c2'>
                    <div class='card'><div class='front'></div><div class='back'></div></div>
                </th>
                <th id='r2c3'>
                    <div class='card'><div class='front'></div><div class='back'></div></div>
                </th>
                <th id='r2c4'>
                    <div class='card'><div class='front'></div><div class='back'></div></div>
                </th>
            </tr>
            <tr>
                <th id='r3c1'>
                    <div class='card'><div class='front'></div><div class='back'></div></div>
                </th>
                <th id='r3c2'>
                    <div class='card'><div class='front'></div><div class='back'></div></div>
                </th>
                <th id='r3c3'>
                    <div class='card'><div class='front'></div><div class='back'></div></div>
                </th>
                <th id='r3c4'>
                    <div class='card'><div class='front'></div><div class='back'></div></div>
                </th>
            </tr>
            <tr>
                <th id='r4c1'>
                    <div class='card'><div class='front'></div><div class='back'></div></div>
                </th>
                <th id='r4c2'>
                    <div class='card'><div class='front'></div><div class='back'></div></div>
                </th>
                <th id='r4c3'>
                    <div class='card'><div class='front'></div><div class='back'></div></div>
                </th>
                <th id='r4c4'>
                    <div class='card'><div class='front'></div><div class='back'></div></div>
                </th>
            </tr>
        </table>

        <table id="div2" style="display: none;" ondrop="drop(event)" ondragover="allowDrop(event)">
            <tr>
                <th class='sub_box' id="reactant">
                    <p>REACTANT</p>
                </th>
                <th class='symbol' id="plus">+ </th>
                <th class='sub_box' id="reagent"> 
                    <p>REAGENT</p>
                </th>
                <th class='symbol' id="arrow">=</th>
                <th class='sub_box' id="product"> 
                    <p>PRODUCT</p>
                </th>
            </tr>
        </table>
        <div id='submit' style="display: none;">
            <button id='check'>Submit</button>
            <button id='clear_answers' style='display: none;'>Clear</button>
            //-<button class='submit' id='check'>Submit</button>
        </div>
        <div id="score"></div>
        <div id="result"></div>
        </div>

        <form action='/'>
            <input type='submit' value='Home Page' />
        </form>
        <form action='/admin'>
            <input type='submit' value='Admin Page' />
        </form>
    </body>
